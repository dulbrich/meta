num_univalue_subtrees = 0

is_univalue(cur_node) -> boolean:
	# Base case: leaf node
	if cur_node.left is null and cur_node.right is null:
		num_univalue_subtrees += 1
		return True
	
	# Recursive case: internal node
	is_left_univalue = True
	is_right_univalue = True
	
	if cur_node.left is not null:
		is_left_univalue = is_univalue(cur_node.left) and cur_node.left.val == cur_node.val
		
	if cur_node.right is not null:
		is_right_univalue = is_univalue(cur_node.right) and cur_node.right.val == cur_node.val
		
	is_cur_node_univalue = is_left_univalue and is_right_univalue
	
	if is_cur_node_univalue:
		num_univalue_subtrees += 1
	
	return is_cur_node_univalue

main(root)
	if root is null:
		return 0
		
	is_univalue(root)
	
	return num_univalue_subtrees
	

	
