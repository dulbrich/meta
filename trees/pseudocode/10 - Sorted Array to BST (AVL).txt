get_next_subtree_root(start_idx: int, end_idx: int) -> TreeNode:
	if start_idx > end_idx:
		return null
	
	root_idx = floor((start_idx + end_idx) / 2)
	cur_node = TreeNode(nums[root_idx])
	cur_node.left = get_next_subtree_root(start_idx, root_idx - 1)
	cur_node.right = get_next_subtree_root(root_idx + 1, end_idx)
	
	return cur_node
                    
sortedArrayToBST(sorted_nums: List[int]) -> TreeNode:
	if sorted_nums is null:
		return null
		
	 return get_next_subtree_root(0, len(nums) - 1)
	 
